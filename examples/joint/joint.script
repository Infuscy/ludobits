local physics = require "ludobits.m.physics"

function init(self)
	msg.post("#", "acquire_input_focus")
	
	local o1 = physics.add_object(hash("/go1"), 0)
	local o2 = physics.add_object(hash("/go2"), 1000)
	local o3 = physics.add_object(hash("/go3"), 1000)
	local o4 = physics.add_object(hash("/go4"), 1000)
	local o5 = physics.add_object(hash("/go5"), 1000)
	local o6 = physics.add_object(hash("/go6"), 1000)
	local o7 = physics.add_object(hash("/go7"), 10000)
	physics.add_point_joint(o1, go.get_position(o1.id))
	physics.add_string_joint(o1, o2, 20)
	physics.add_string_joint(o2, o3, 20)
	physics.add_string_joint(o3, o4, 20)
	physics.add_string_joint(o4, o5, 20)
	physics.add_string_joint(o5, o6, 20)
	physics.add_string_joint(o6, o7, 60)
end

function final(self)
	msg.post("#", "release_input_focus")
end

function update(self, dt)
	physics.update(dt)
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		local id = factory.create("#ballfactory", vmath.vector3(action.x, action.y, 0))
		physics.add_object(id, 15000)
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
